#!/usr/bin/env node
console.error('Assuming eye and cwm as globals; N3.js at ./N3.js/lib/N3Parser.js\n');

var N3Parser = require('./N3.js/lib/N3Parser.js');
var fs = require('fs'),
    exec = require('child_process').exec;

var tempFile = 'tmp.ttl', tempFileContents = '', match;
var testers = {
  'EYE  ': testWithEye,
  'cwm  ': testWithCwm,
  'N3.js': testWithN3,
};
var cases = [
  'A. Resolving without leading ./ or ../',
  { base: 'http://example.org/xxx/yyy/zzz', resolve: 'aaa/bbb/ccc' },

  'B. Resolving with non-leading ./ or ../',
  { base: 'http://example.org/xxx/yyy/zzz', resolve: 'aaa/./bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz', resolve: 'aaa/bbb/./ccc' },
  { base: 'http://example.org/xxx/yyy/zzz', resolve: 'aaa/../bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz', resolve: 'aaa/bbb/../ccc' },

  'C. Resolving with leading sequences of ./',
  { base: 'http://example.org/xxx/yyy/zzz', resolve: './aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz', resolve: '././aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz', resolve: './././aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz', resolve: '././././././aaa/bbb/ccc' },

  'D. Resolving with leading sequences of ../',
  { base: 'http://example.org/xxx/yyy/zzz', resolve: '../aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz', resolve: '../../aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz', resolve: '../../../aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz', resolve: '../../../../../../aaa/bbb/ccc' },

  'E. Resolving with leading mixed sequences of ./ and ../',
  { base: 'http://example.org/xxx/yyy/zzz', resolve: './../aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz', resolve: '.././aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz', resolve: './.././aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz', resolve: '../././aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz', resolve: './.././../aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz', resolve: '.././.././aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz', resolve: './.././.././../aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz', resolve: '.././.././.././aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz', resolve: './.././.././.././../aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz', resolve: '.././.././.././.././aaa/bbb/ccc' },

  'F. Resolving with leading mixed sequences of ./ and ../, where ./ always occurs in pairs',
  { base: 'http://example.org/xxx/yyy/zzz', resolve: '../././../aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz', resolve: '../././../././../aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz', resolve: '../././../././../././../aaa/bbb/ccc' },

  'G. Resolving with trailing sequences of ./ in the base IRI',
  { base: 'http://example.org/xxx/yyy/zzz/./',     resolve: '../aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz/././',   resolve: '../aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz/./././', resolve: '../aaa/bbb/ccc' },

  'H. Resolving with trailing sequences of ../ in the base IRI',
  { base: 'http://example.org/xxx/yyy/zzz/../',       resolve: '../aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz/../../',    resolve: '../aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz/../../../', resolve: '../aaa/bbb/ccc' },

  'I. Resolving with trailing mixed sequences of ./ and ../ in the base IRI',
  { base: 'http://example.org/xxx/yyy/zzz/.././',         resolve: '../aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz/./../',         resolve: '../aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz/.././../',      resolve: '../aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz/./.././',       resolve: '../aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz/.././.././../', resolve: '../aaa/bbb/ccc' },
  { base: 'http://example.org/xxx/yyy/zzz/./.././.././',  resolve: '../aaa/bbb/ccc' },
];

(function nextCase() {
  var test = cases.shift(), completed = 0, results = {}, testerIds = Object.keys(testers);
  if (!test) return fs.unlinkSync(tempFile);
  if (!test.resolve) return console.log('\n%s', test), nextCase();
  
  // create test case
  tempFileContents = '@base <' + test.base + '>.\n' +
                     '<urn:a> <urn:b> <' + test.resolve + '>.\n';
  fs.writeFileSync(tempFile, tempFileContents);

  // execute test case
  testerIds.forEach(function (id) { testers[id](done.bind(null, id)); });
  function done(id, result) {
    results[id] = result;
    if (++completed === testerIds.length)
      report(), nextCase();
  }
  // report test case results
  function report() {
    console.log('  BASE %s, resolving %s', test.base, test.resolve);
    testerIds.forEach(function (id) { console.log('    %s   %s', id, results[id]); }); 
  }
})();

function testWithEye(callback) {
  exec('eye --nope --pass ' + tempFile, function (error, stdout, stderr) {
    if (match = stderr.match(/ERROR .* \*\* (.*)/)) callback(match[1]);
    else if (match = stdout.match(/http[^>]+/))     callback(match[0]);
    else callback('(result not found)');
  });
}

function testWithCwm(callback) {
  exec('cwm ' + tempFile, function (error, stdout, stderr) {
    if (match = stderr.match(/\s*(.*)\n/))      callback(match[1]);
    else if (match = stdout.match(/http[^>]+/)) callback(match[0]);
    else callback('(result not found)');
  });
}

function testWithN3(callback) {
  new N3Parser().parse(tempFileContents, function (error, triple) {
    if (triple) callback(triple.object);
    else if (error) callback(error.message);
  });
}
